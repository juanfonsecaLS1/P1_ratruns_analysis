
# Baseline Network Graph {#sec-graph-bl}

Libraries

```{r,message=FALSE}
#| label: libraries
#| message: false

options(repos = c(CRAN = "https://cloud.r-project.org"))
if (!require("remotes")) install.packages("remotes")
pkgs = c(
    "sf",
    "tidyverse"
    # "dodgr" # Using the developer version of dodgr
)
remotes::install_cran(pkgs)
sapply(pkgs, require, character.only = TRUE)

require(dodgr)
```


Using the networks extracted [before](A1_network.qmd#sec-extrosm). The following code loads the
`sf` objects.
```{r}
#| label: read-sf
sf_bogota_2019 <- st_read(file.path("sf_network","bogota_osm_network.gpkg"),layer = "network_2019")
```


## Building the graph

In this step, a graph representation of the 2019 road network of BogotÃ¡ is processed
using the `dodgr` package. Posted speed limits are used as standard speeds for 
the road links (edges). The corresponding weighting profile
has been saved in the `bogota_wp.json` file. To speed up the calculation, a 
distance threshold is applied based on an maximum error of `0.001`.

```{r}
#| eval: false
#| label: graph-building

graph_bogota <- weight_streetnet(sf_bogota_2019,
                                 left_side = F,
                                 wt_profile_file = "bogota_wp.json",
                                 wt_profile = "motorcar",
                                 keep_cols = c("oneway","lanes","surface","maxspeed"))

# graph_bogota |>
#   dodgr_contract_graph() |>
#   estimate_centrality_threshold(tolerance = 1e-3)
# converged on distance threshold of 14000

graph_bogota_centrality <- graph_bogota |> 
  dodgr_deduplicate_graph() |>
  dodgr_contract_graph() |>
  dodgr_centrality(dist_threshold = 1.4e4,
                   column = "time_weighted")

sf_network <- graph_bogota |> 
    dodgr_to_sf ()
```

Exporting the results

```{r}
#| label: join-cent
#| eval: false

sf_net_cent <- sf_network |>
  left_join(
    tibble(edge_id = graph_bogota_centrality$edge_id,
           centrality = graph_bogota_centrality$centrality),
    by = "edge_id")

st_write(sf_net_cent,"sf_network/bogota_osm_network_cent.gpkg",delete_dsn = F,delete_layer = T,layer = "bog_cent_2019")
```


### Visualising

To clip the network for visualisation, we will load the file with urban perimeter 

```{r}
#| label: loading-urbanper

urban_perimeter <- st_read("raw_data/perimetrourbano.gpkg") |> 
  st_transform(4326)

```







