[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rat-runs",
    "section": "",
    "text": "Rat-runs in Bogota\n\nNetwork data\n\nOSM\nIDECA malla vial integral\n\n\n\nInfractions data\n\n\nAssumptions:\n\nRecurring wrong-way infraction reports in residential streets is a result of rat-running\n\n\n\nHypothesis:"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "A1_network.html",
    "href": "A1_network.html",
    "title": "Extracting OSM networks",
    "section": "",
    "text": "options(repos = c(CRAN = \"https://cloud.r-project.org\"))\nif (!require(\"remotes\")) install.packages(\"remotes\")\npkgs = c(\n    \"sf\",\n    \"tidyverse\",\n    \"osmextract\",\n    \"rvest\"\n)\nremotes::install_cran(pkgs)\nsapply(pkgs, require, character.only = TRUE)\n\n        sf  tidyverse osmextract      rvest \n      TRUE       TRUE       TRUE       TRUE \n\n\nFor this study, we will use OpenStreetMap to obtain the road network data. First, we will download a spatial data file with the urban perimeter of Bogotá from Datos Abiertos de Bogotá (Bogotá’s Open Data platform).\n\ndir.create(\"raw_data\",showWarnings = F)\n\nif(!file.exists(file.path(\"raw_data\", \"perimetrourbano.gpkg\"))) {\n  u &lt;- \"https://datosabiertos.bogota.gov.co/dataset/12a704ee-e5bb-4c5d-bad6-a5069d12f90a/resource/bfc61e3c-fa58-4fe7-9581-7ead66c494cb/download/perimetrourbano.gpkg\"\n  download.file(u, file.path(\"raw_data\", basename(u)), mode = \"wb\")\n}\n\nurban_perimeter &lt;- st_read(\"raw_data/perimetrourbano.gpkg\")\n\nReading layer `PerimetroUrbano' from data source \n  `C:\\Users\\ts18jpf\\OneDrive - University of Leeds\\03_PhD\\P1_Ratruns\\P1_ratruns_analysis\\raw_data\\perimetrourbano.gpkg' \n  using driver `GPKG'\n\n\nWarning in CPL_read_ogr(dsn, layer, query, as.character(options), quiet, : GDAL\nMessage 1: Non-conformant content for record 1 in column\nFECHA_ACTO_ADMINISTRATIVO, 2021-12-29T00:00:00.0Z, successfully parsed\n\n\nSimple feature collection with 3 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -74.22358 ymin: 4.468614 xmax: -74.01206 ymax: 4.830661\nGeodetic CRS:  MAGNA-SIRGAS\n\n\nWe will use the osmextract package to get OSM data in R. Please note that we will be using previous versions of the OSM data, as the network might have changed in recent years. For example, some sections of the roads are currently closed (2024) due to the works for the first metro line in Bogotá. We will use OSM networks for end of 2019 (January 1st, 2020) and 2020 (January 1st, 2021).\nFirst, we produce a boundary box for an area covering the urban perimeter and the neighbouring municipalities. This is done by producing a buffer of 20 km around Bogotá.\n\nbbox_bogota &lt;- urban_perimeter |&gt;\n  st_buffer(dist = 20e3) |&gt; \n  st_bbox() |&gt;\n  st_as_sfc() |&gt;\n  st_transform(crs = 4326)\n\nWe obtain the url of the pbf file in Geofabrik which contains the area we are interested in.\n\nbog_match &lt;- oe_match(bbox_bogota,provider = \"geofabrik\")\n\nThe input place was matched with Colombia. \n\n\nThe following code obtains the names of the files with the older versions of the OSM data and downloads the 2019 and 2020 pbf files.\n\nu &lt;- dirname(bog_match$url)\nf &lt;- basename(bog_match$url)\n\nid_files &lt;- gsub(\"latest\\\\.osm\\\\.pbf\",replacement = \"\",f)\n\nfiles_table &lt;- (rvest::read_html(u) |&gt; html_table())[[1]]\n\navailable_versions &lt;- files_table$Name[grep(paste0(id_files,\"\\\\d{6}\\\\.osm\\\\.pbf$\"),\n                                            files_table$Name)]\n\nnet_options &lt;- osmextract:::load_options_driving(NA_character_)\n\nnet_old_200101 &lt;- do.call(oe_read,\n                          c(file_path = paste0(u,\"/\",available_versions[7]),\n                            net_options[2:4]\n                     )\n                   )\n\nThe chosen file was already detected in the download directory. Skip downloading.\n\n\nStarting with the vectortranslate operations on the input file!\n\n\n0...10...20...30...40...50...60...70...80...90...100 - done.\n\n\nFinished the vectortranslate operations on the input file!\n\n\nReading layer `lines' from data source \n  `C:\\Users\\ts18jpf\\Documents\\OSMEXT_downloads\\geofabrik_colombia-200101.gpkg' \n  using driver `GPKG'\nSimple feature collection with 461429 features and 11 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -81.73539 ymin: -4.259884 xmax: -66.83441 ymax: 13.38586\nGeodetic CRS:  WGS 84\n\nnet_old_210101 &lt;- do.call(oe_read,\n                          c(file_path = paste0(u,\"/\",available_versions[8]),\n                            net_options[2:4]\n                     )\n                   )\n\nThe chosen file was already detected in the download directory. Skip downloading.\nStarting with the vectortranslate operations on the input file!\n\n\n0...10...20...30...40...50...60...70...80...90...100 - done.\n\n\nFinished the vectortranslate operations on the input file!\n\n\nReading layer `lines' from data source \n  `C:\\Users\\ts18jpf\\Documents\\OSMEXT_downloads\\geofabrik_colombia-210101.gpkg' \n  using driver `GPKG'\nSimple feature collection with 650682 features and 11 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -81.73539 ymin: -4.259656 xmax: -66.83441 ymax: 13.38586\nGeodetic CRS:  WGS 84\n\n\nOnce we have downloaded the data. We can clean and clip the network by using the boundary box we produced and by filtering only relevant road links (see the road_types vector).\n\nroad_types &lt;- c(\"tertiary\"       ,\n  \"residential\"    ,\n  \"primary_link\"   ,\n  \"primary\"      ,\n  \"secondary\"      ,\n  \"trunk\"          ,\n  \"trunk_link\"     ,\n  # \"service\"      ,\n  \"secondary_link\" ,\n  \"unclassified\"   ,\n  \"tertiary_link\"  \n  # \"living_street\"\n  # \"track\"          ,\n  # \"busway\"         ,\n  # \"raceway\"\n)\n\nosm_bogota_200101 &lt;- net_old_200101[bbox_bogota,] |&gt;\n  filter(highway %in% road_types) |&gt; st_transform(st_crs(urban_perimeter))\n\nosm_bogota_210101 &lt;- net_old_210101[bbox_bogota,] |&gt;\n  filter(highway %in% road_types) |&gt; st_transform(st_crs(urban_perimeter))\n\nrm(net_old_200101,net_old_210101)\n\n\n\nFinally, we save the sf objects as GeoPackages.\n\ndir.create(\"sf_network\",showWarnings = F)\nst_write(osm_bogota_200101,file.path(\"sf_network\",\"bogota_osm_network.gpkg\"),delete_dsn = F,layer = \"network_2019\",delete_layer = T)\n\nDeleting layer `network_2019' using driver `GPKG'\nWriting layer `network_2019' to data source \n  `sf_network/bogota_osm_network.gpkg' using driver `GPKG'\nWriting 54531 features with 11 fields and geometry type Line String.\n\nst_write(osm_bogota_210101,file.path(\"sf_network\",\"bogota_osm_network.gpkg\"),delete_dsn = F,layer = \"network_2020\",delete_layer = T)\n\nDeleting layer `network_2020' using driver `GPKG'\nWriting layer `network_2020' to data source \n  `sf_network/bogota_osm_network.gpkg' using driver `GPKG'\nWriting 62166 features with 11 fields and geometry type Line String."
  },
  {
    "objectID": "A1_network.html#save-network-in-sf-format",
    "href": "A1_network.html#save-network-in-sf-format",
    "title": "Extracting OSM networks",
    "section": "",
    "text": "Finally, we save the sf objects as GeoPackages.\n\ndir.create(\"sf_network\",showWarnings = F)\nst_write(osm_bogota_200101,file.path(\"sf_network\",\"bogota_osm_network.gpkg\"),delete_dsn = F,layer = \"network_2019\",delete_layer = T)\n\nDeleting layer `network_2019' using driver `GPKG'\nWriting layer `network_2019' to data source \n  `sf_network/bogota_osm_network.gpkg' using driver `GPKG'\nWriting 54531 features with 11 fields and geometry type Line String.\n\nst_write(osm_bogota_210101,file.path(\"sf_network\",\"bogota_osm_network.gpkg\"),delete_dsn = F,layer = \"network_2020\",delete_layer = T)\n\nDeleting layer `network_2020' using driver `GPKG'\nWriting layer `network_2020' to data source \n  `sf_network/bogota_osm_network.gpkg' using driver `GPKG'\nWriting 62166 features with 11 fields and geometry type Line String."
  },
  {
    "objectID": "A2_graph.html",
    "href": "A2_graph.html",
    "title": "Baseline Network Graph",
    "section": "",
    "text": "Libraries\n\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\nif (!require(\"remotes\")) install.packages(\"remotes\")\npkgs = c(\n    \"sf\",\n    \"tidyverse\",\n    \"dodgr\"\n)\nremotes::install_cran(pkgs)\n\npackage 'dodgr' successfully unpacked and MD5 sums checked\n\n\nWarning: cannot remove prior installation of package 'dodgr'\n\n\nWarning in file.copy(savedcopy, lib, recursive = TRUE): problem copying\nC:\\Users\\ts18jpf\\AppData\\Local\\R\\win-library\\4.4\\00LOCK\\dodgr\\libs\\x64\\dodgr.dll\nto C:\\Users\\ts18jpf\\AppData\\Local\\R\\win-library\\4.4\\dodgr\\libs\\x64\\dodgr.dll:\nPermission denied\n\n\nWarning: restored 'dodgr'\n\n\n\nThe downloaded binary packages are in\n    C:\\Users\\ts18jpf\\AppData\\Local\\Temp\\Rtmp2Rlm4C\\downloaded_packages\n\nsapply(pkgs, require, character.only = TRUE)\n\n       sf tidyverse     dodgr \n     TRUE      TRUE      TRUE \n\n\nUsing the networks extracted before. The following code loads the sf objects.\n\nsf_bogota_2019 &lt;- st_read(file.path(\"sf_network\",\"bogota_osm_network.gpkg\"),layer = \"network_2019\")\n\nReading layer `network_2019' from data source \n  `C:\\Users\\ts18jpf\\OneDrive - University of Leeds\\03_PhD\\P1_Ratruns\\P1_ratruns_analysis\\sf_network\\bogota_osm_network.gpkg' \n  using driver `GPKG'\nSimple feature collection with 54531 features and 11 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -74.441 ymin: 4.236862 xmax: -73.72583 ymax: 5.042826\nGeodetic CRS:  MAGNA-SIRGAS\n\n\n\n\nIn this step, a graph representation of the 2019 road network of Bogotá is processed using the dodgr package. Posted speed limits are used as standard speeds for the road links (edges). The corresponding weighting profile has been saved in the bogota_wp.json file. To speed up the calculation, a distance threshold is applied based on an maximum error of 0.001.\n\ngraph_bogota &lt;- weight_streetnet(sf_bogota_2019,\n                                 left_side = F,\n                                 wt_profile_file = \"bogota_wp.json\",\n                                 wt_profile = \"motorcar\")\n\n# graph_bogota |&gt;\n#   dodgr_contract_graph() |&gt;\n#   estimate_centrality_threshold(tolerance = 1e-3)\n# converged on distance threshold of 14000\n\ngraph_bogota_centrality &lt;- graph_bogota |&gt; \n  dodgr_deduplicate_graph() |&gt;\n  dodgr_contract_graph() |&gt;\n  dodgr_centrality(dist_threshold = 1.4e4)\n\nsf_network &lt;- graph_bogota |&gt; \n    dodgr_to_sf ()\n\nExporting the results\n\nsf_net_cent &lt;- sf_network |&gt;\n  left_join(\n    tibble(edge_id = graph_bogota_centrality$edge_id,\n           centrality = graph_bogota_centrality$centrality),\n    by = \"edge_id\")\n\nst_write(sf_net_cent,\"sf_network/bogota_osm_network_cent.gpkg\",delete_dsn = F,delete_layer = T,layer = \"bog_cent_2019\")\n\n\n\nTo clip the network for visualisation, we will load the file with urban perimeter\n\nurban_perimeter &lt;- st_read(\"raw_data/perimetrourbano.gpkg\") |&gt; \n  st_transform(4326)\n\nReading layer `PerimetroUrbano' from data source \n  `C:\\Users\\ts18jpf\\OneDrive - University of Leeds\\03_PhD\\P1_Ratruns\\P1_ratruns_analysis\\raw_data\\perimetrourbano.gpkg' \n  using driver `GPKG'\n\n\nWarning in CPL_read_ogr(dsn, layer, query, as.character(options), quiet, : GDAL\nMessage 1: Non-conformant content for record 1 in column\nFECHA_ACTO_ADMINISTRATIVO, 2021-12-29T00:00:00.0Z, successfully parsed\n\n\nSimple feature collection with 3 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -74.22358 ymin: 4.468614 xmax: -74.01206 ymax: 4.830661\nGeodetic CRS:  MAGNA-SIRGAS\n\n\nThe following code produces a visualisation of the network with the calculated centrality.\n\nroad_hierarchy &lt;- c( \n  \"trunk\",\n  \"trunk_link\",\n  \"primary\",\n  \"primary_link\",\n  \"secondary\",\n  \"secondary_link\",\n  \"tertiary\",\n  \"tertiary_link\",\n  \"residential\",\n  \"unclassified\"\n  )\n\n\nmymap &lt;- sf_net_cent[urban_perimeter,] |&gt; \n  mutate(highway = factor(highway,levels = road_hierarchy,ordered = T)) |&gt; \n  ggplot(aes(linewidth = centrality+1))+\n  geom_sf(aes(col = log(centrality)))+\n  scale_color_viridis_c(direction = -1)+\n  scale_linewidth_continuous(range = c(0.05,0.3),\n                             transform = scales::transform_boxcox(p = 2))+\n  theme_void()+\n  guides(linewidth = \"none\",)+\n  labs(col = \"Centrality (log)\",\n       caption = \"BC at posted speed limit\")+\n  theme(legend.position = \"inside\",\n        legend.position.inside = c(0.25,0.8),\n        # text = element_text(family = \"Roboto Condensed\"),\n        legend.key.width = unit(3, \"mm\"))\n\n## For saving the final plot\n# ggsave(plot = mymap,\n#        filename = \"bog_centrality.png\",\n#        dpi = 330,\n#        units = \"cm\",\n#        height = 13,\n#        width = 11)\nmymap\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_sf()`)."
  },
  {
    "objectID": "B1_infractions.html",
    "href": "B1_infractions.html",
    "title": "Infraction data",
    "section": "",
    "text": "options(repos = c(CRAN = \"https://cloud.r-project.org\"))\nif (!require(\"remotes\")) install.packages(\"remotes\")\npkgs = c(\n    \"sf\",\n    \"tidyverse\",\n    \"tmap\",\n    \"webshot2\"\n)\nremotes::install_cran(pkgs)\nsapply(pkgs, require, character.only = TRUE)\n\n       sf tidyverse      tmap  webshot2 \n     TRUE      TRUE      TRUE      TRUE \n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "B1_infractions.html#loading-infractions",
    "href": "B1_infractions.html#loading-infractions",
    "title": "Infraction data",
    "section": "Loading Infractions",
    "text": "Loading Infractions\n\nreports2019 &lt;- read_csv(\"../00_data/bogota/Comparendos_2019_Bogota_D_C.csv\",\n                        col_types = cols(\n                          X = col_double(),\n                          Y = col_double(),\n                          OBJECTID = col_double(),\n                          NUM_COMPARENDO = col_character(),\n                          FECHA_HORA = col_character(),\n                          ANO = col_double(),\n                          HORA_OCURRENCIA = col_character(),\n                          MES = col_character(),\n                          MEDIO_DETECCION = col_character(),\n                          CLASE_VEHICULO = col_character(),\n                          TIPO_SERVICIO = col_character(), \n                          INFRACCION = col_character(),\n                          DES_INFRACCION = col_character(),\n                          LOCALIDAD = col_character(),\n                          MUNICIPIO = col_character(),\n                          LATITUD = col_double(),\n                          LONGITUD = col_double(),\n                          GlobalID = col_character()\n                        ))\n\n\nreports2020 &lt;- read_csv(\"../00_data/bogota/Comparendos_DEI_2020_Bogot%C3%A1_D_C.csv\",\n                        col_types = cols(\n                          X = col_double(),\n                          Y = col_double(),\n                          FID = col_double(),\n                          OBJECTID = col_double(),\n                          FECHA_HORA = col_character(),\n                          ANO = col_double(),\n                          HORA_OCURR = col_character(),\n                          MES = col_character(),\n                          MEDIO_DETE = col_character(),\n                          CLASE_VEHI = col_character(),\n                          TIPO_SERVI = col_character(),\n                          INFRACCION = col_character(),\n                          DES_INFRAC = col_character(),\n                          MUNICIPIO = col_character(),\n                          PAIS = col_character(),\n                          LATITUD = col_double(),\n                          LONGITUD = col_double()))"
  },
  {
    "objectID": "B1_infractions.html#exploring-types-of-infractions",
    "href": "B1_infractions.html#exploring-types-of-infractions",
    "title": "Infraction data",
    "section": "Exploring types of infractions",
    "text": "Exploring types of infractions\n\nreports2019 |&gt; \n  count(INFRACCION) |&gt; \n  filter(n&gt;quantile(n,0.90)) |&gt; \n  ggplot(aes(y = fct_reorder(INFRACCION,n),\n             x = n))+\n  geom_col()+\n  scale_x_continuous()\n\n\n\n\n\n\n\n\n\ncount_infractions &lt;- reports2019 |&gt; \n  count(INFRACCION,DES_INFRACCION) |&gt; \n  filter(n&gt;quantile(n,0.70)) |&gt; \n  arrange(-n)"
  },
  {
    "objectID": "B1_infractions.html#wrong-way-infraction",
    "href": "B1_infractions.html#wrong-way-infraction",
    "title": "Infraction data",
    "section": "Wrong way infraction",
    "text": "Wrong way infraction\nCreating an sf object with the reports for driving in the wrong-way\n\nwrong_way_2019_sf &lt;- reports2019 |&gt;\n  filter(INFRACCION == \"D03\") |&gt; \n  select(-DES_INFRACCION) |&gt;\n  mutate(time = hms(HORA_OCURRENCIA)) |&gt; \n  st_as_sf(coords = c(\"LONGITUD\",\"LATITUD\"),crs = 4326)\n\nwrong_way_2020_sf &lt;- reports2020 |&gt;\n  filter(INFRACCION == \"D03\") |&gt; \n  select(-DES_INFRAC) |&gt; \n  mutate(time = hms(HORA_OCURR)) |&gt;\n  st_as_sf(coords = c(\"LONGITUD\",\"LATITUD\"),crs = 4326)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `time = hms(HORA_OCURR)`.\nCaused by warning in `.parse_hms()`:\n! Some strings failed to parse"
  },
  {
    "objectID": "B1_infractions.html#mapping-the-infractions",
    "href": "B1_infractions.html#mapping-the-infractions",
    "title": "Infraction data",
    "section": "Mapping the infractions",
    "text": "Mapping the infractions\n\n# tmap_mode(\"view\")\ntm_shape(wrong_way_2019_sf)+\n  tm_dots(\"blue\")+\ntm_shape(wrong_way_2020_sf)+\n  tm_dots(\"red\")"
  },
  {
    "objectID": "B1_infractions.html#temporal-distribution",
    "href": "B1_infractions.html#temporal-distribution",
    "title": "Infraction data",
    "section": "Temporal distribution",
    "text": "Temporal distribution\n\n  ggplot(wrong_way_2019_sf,\n         aes(time))+\n  geom_density(col = \"dodgerblue3\",alpha = 0.5,linewidth = 2)+\n  geom_density(data = wrong_way_2020_sf, col = \"firebrick3\",alpha = 0.5,linewidth = 2)+\n    scale_x_time()+\n  # scale_y_continuous(labels = scales::label_percent(accuracy = 2))+\n  labs(x = \"Time\",\n       title = \"Daily profile of wrong-way driving reports\",\n       subtitle = \"blue = 2019 , red = 2020\",\n       caption = \"Showing all days\")+\n  theme_minimal()\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "B1_infractions.html#summary-by-vehicle-type",
    "href": "B1_infractions.html#summary-by-vehicle-type",
    "title": "Infraction data",
    "section": "Summary by vehicle type",
    "text": "Summary by vehicle type\n\nwrong_way_2019_sf |&gt;\n  st_drop_geometry() |&gt; \n  mutate(veh_class = CLASE_VEHICULO |&gt;\n           str_to_lower()) |&gt; \n  count(veh_class) |&gt; \n  arrange(-n)\n\n# A tibble: 15 × 2\n   veh_class                n\n   &lt;chr&gt;                &lt;int&gt;\n 1 motocicleta           1743\n 2 automóvil              822\n 3 camioneta              277\n 4 campero                 76\n 5 bus                     29\n 6 camión                  27\n 7 micro                   17\n 8 microbus                12\n 9 buseta                   9\n10 motociclo                4\n11 tractocamión             3\n12 volqueta                 3\n13 -                        1\n14 bicicleta o triciclo     1\n15 tractocamion             1\n\n\n\nst_write(wrong_way_2019_sf,dsn = \"wwd_2019.gpkg\",delete_dsn = T)\n\nDeleting source `wwd_2019.gpkg' using driver `GPKG'\nWriting layer `wwd_2019' to data source `wwd_2019.gpkg' using driver `GPKG'\nWriting 3025 features with 16 fields and geometry type Point."
  },
  {
    "objectID": "A2_graph.html#building-the-graph",
    "href": "A2_graph.html#building-the-graph",
    "title": "Baseline Network Graph",
    "section": "",
    "text": "In this step, a graph representation of the 2019 road network of Bogotá is processed using the dodgr package. Posted speed limits are used as standard speeds for the road links (edges). The corresponding weighting profile has been saved in the bogota_wp.json file. To speed up the calculation, a distance threshold is applied based on an maximum error of 0.001.\n\ngraph_bogota &lt;- weight_streetnet(sf_bogota_2019,\n                                 left_side = F,\n                                 wt_profile_file = \"bogota_wp.json\",\n                                 wt_profile = \"motorcar\")\n\n# graph_bogota |&gt;\n#   dodgr_contract_graph() |&gt;\n#   estimate_centrality_threshold(tolerance = 1e-3)\n# converged on distance threshold of 14000\n\ngraph_bogota_centrality &lt;- graph_bogota |&gt; \n  dodgr_deduplicate_graph() |&gt;\n  dodgr_contract_graph() |&gt;\n  dodgr_centrality(dist_threshold = 1.4e4)\n\nsf_network &lt;- graph_bogota |&gt; \n    dodgr_to_sf ()\n\nExporting the results\n\nsf_net_cent &lt;- sf_network |&gt;\n  left_join(\n    tibble(edge_id = graph_bogota_centrality$edge_id,\n           centrality = graph_bogota_centrality$centrality),\n    by = \"edge_id\")\n\nst_write(sf_net_cent,\"sf_network/bogota_osm_network_cent.gpkg\",delete_dsn = F,delete_layer = T,layer = \"bog_cent_2019\")\n\n\n\nTo clip the network for visualisation, we will load the file with urban perimeter\n\nurban_perimeter &lt;- st_read(\"raw_data/perimetrourbano.gpkg\") |&gt; \n  st_transform(4326)\n\nReading layer `PerimetroUrbano' from data source \n  `C:\\Users\\ts18jpf\\OneDrive - University of Leeds\\03_PhD\\P1_Ratruns\\P1_ratruns_analysis\\raw_data\\perimetrourbano.gpkg' \n  using driver `GPKG'\n\n\nWarning in CPL_read_ogr(dsn, layer, query, as.character(options), quiet, : GDAL\nMessage 1: Non-conformant content for record 1 in column\nFECHA_ACTO_ADMINISTRATIVO, 2021-12-29T00:00:00.0Z, successfully parsed\n\n\nSimple feature collection with 3 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -74.22358 ymin: 4.468614 xmax: -74.01206 ymax: 4.830661\nGeodetic CRS:  MAGNA-SIRGAS\n\n\nThe following code produces a visualisation of the network with the calculated centrality.\n\nroad_hierarchy &lt;- c( \n  \"trunk\",\n  \"trunk_link\",\n  \"primary\",\n  \"primary_link\",\n  \"secondary\",\n  \"secondary_link\",\n  \"tertiary\",\n  \"tertiary_link\",\n  \"residential\",\n  \"unclassified\"\n  )\n\n\nmymap &lt;- sf_net_cent[urban_perimeter,] |&gt; \n  mutate(highway = factor(highway,levels = road_hierarchy,ordered = T)) |&gt; \n  ggplot(aes(linewidth = centrality+1))+\n  geom_sf(aes(col = log(centrality)))+\n  scale_color_viridis_c(direction = -1)+\n  scale_linewidth_continuous(range = c(0.05,0.3),\n                             transform = scales::transform_boxcox(p = 2))+\n  theme_void()+\n  guides(linewidth = \"none\",)+\n  labs(col = \"Centrality (log)\",\n       caption = \"BC at posted speed limit\")+\n  theme(legend.position = \"inside\",\n        legend.position.inside = c(0.25,0.8),\n        # text = element_text(family = \"Roboto Condensed\"),\n        legend.key.width = unit(3, \"mm\"))\n\n## For saving the final plot\n# ggsave(plot = mymap,\n#        filename = \"bog_centrality.png\",\n#        dpi = 330,\n#        units = \"cm\",\n#        height = 13,\n#        width = 11)\nmymap\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_sf()`)."
  },
  {
    "objectID": "C1_infractions.html",
    "href": "C1_infractions.html",
    "title": "Infraction data",
    "section": "",
    "text": "options(repos = c(CRAN = \"https://cloud.r-project.org\"))\nif (!require(\"remotes\")) install.packages(\"remotes\")\npkgs = c(\n    \"sf\",\n    \"tidyverse\",\n    \"tmap\",\n    \"webshot2\"\n)\nremotes::install_cran(pkgs)\nsapply(pkgs, require, character.only = TRUE)\n\n       sf tidyverse      tmap  webshot2 \n     TRUE      TRUE      TRUE      TRUE \n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "C1_infractions.html#loading-infractions",
    "href": "C1_infractions.html#loading-infractions",
    "title": "Infraction data",
    "section": "Loading Infractions",
    "text": "Loading Infractions\n\nreports2019 &lt;- read_csv(\"../00_data/bogota/Comparendos_2019_Bogota_D_C.csv\",\n                        col_types = cols(\n                          X = col_double(),\n                          Y = col_double(),\n                          OBJECTID = col_double(),\n                          NUM_COMPARENDO = col_character(),\n                          FECHA_HORA = col_character(),\n                          ANO = col_double(),\n                          HORA_OCURRENCIA = col_character(),\n                          MES = col_character(),\n                          MEDIO_DETECCION = col_character(),\n                          CLASE_VEHICULO = col_character(),\n                          TIPO_SERVICIO = col_character(), \n                          INFRACCION = col_character(),\n                          DES_INFRACCION = col_character(),\n                          LOCALIDAD = col_character(),\n                          MUNICIPIO = col_character(),\n                          LATITUD = col_double(),\n                          LONGITUD = col_double(),\n                          GlobalID = col_character()\n                        ))\n\n\nreports2020 &lt;- read_csv(\"../00_data/bogota/Comparendos_DEI_2020_Bogot%C3%A1_D_C.csv\",\n                        col_types = cols(\n                          X = col_double(),\n                          Y = col_double(),\n                          FID = col_double(),\n                          OBJECTID = col_double(),\n                          FECHA_HORA = col_character(),\n                          ANO = col_double(),\n                          HORA_OCURR = col_character(),\n                          MES = col_character(),\n                          MEDIO_DETE = col_character(),\n                          CLASE_VEHI = col_character(),\n                          TIPO_SERVI = col_character(),\n                          INFRACCION = col_character(),\n                          DES_INFRAC = col_character(),\n                          MUNICIPIO = col_character(),\n                          PAIS = col_character(),\n                          LATITUD = col_double(),\n                          LONGITUD = col_double()))"
  },
  {
    "objectID": "C1_infractions.html#exploring-types-of-infractions",
    "href": "C1_infractions.html#exploring-types-of-infractions",
    "title": "Infraction data",
    "section": "Exploring types of infractions",
    "text": "Exploring types of infractions\n\nreports2019 |&gt; \n  count(INFRACCION) |&gt; \n  filter(n&gt;quantile(n,0.90)) |&gt; \n  ggplot(aes(y = fct_reorder(INFRACCION,n),\n             x = n))+\n  geom_col()+\n  scale_x_continuous()\n\n\n\n\n\n\n\n\n\ncount_infractions &lt;- reports2019 |&gt; \n  count(INFRACCION,DES_INFRACCION) |&gt; \n  filter(n&gt;quantile(n,0.70)) |&gt; \n  arrange(-n)"
  },
  {
    "objectID": "C1_infractions.html#wrong-way-infraction",
    "href": "C1_infractions.html#wrong-way-infraction",
    "title": "Infraction data",
    "section": "Wrong way infraction",
    "text": "Wrong way infraction\nCreating an sf object with the reports for driving in the wrong-way\n\nwrong_way_2019_sf &lt;- reports2019 |&gt;\n  filter(INFRACCION == \"D03\") |&gt; \n  select(-DES_INFRACCION) |&gt;\n  mutate(time = hms(HORA_OCURRENCIA)) |&gt; \n  st_as_sf(coords = c(\"LONGITUD\",\"LATITUD\"),crs = 4326)\n\nwrong_way_2020_sf &lt;- reports2020 |&gt;\n  filter(INFRACCION == \"D03\") |&gt; \n  select(-DES_INFRAC) |&gt; \n  mutate(time = hms(HORA_OCURR)) |&gt;\n  st_as_sf(coords = c(\"LONGITUD\",\"LATITUD\"),crs = 4326)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `time = hms(HORA_OCURR)`.\nCaused by warning in `.parse_hms()`:\n! Some strings failed to parse"
  },
  {
    "objectID": "C1_infractions.html#mapping-the-infractions",
    "href": "C1_infractions.html#mapping-the-infractions",
    "title": "Infraction data",
    "section": "Mapping the infractions",
    "text": "Mapping the infractions\n\n# tmap_mode(\"view\")\ntm_shape(wrong_way_2019_sf)+\n  tm_dots(\"blue\")+\ntm_shape(wrong_way_2020_sf)+\n  tm_dots(\"red\")"
  },
  {
    "objectID": "C1_infractions.html#temporal-distribution",
    "href": "C1_infractions.html#temporal-distribution",
    "title": "Infraction data",
    "section": "Temporal distribution",
    "text": "Temporal distribution\n\n  ggplot(wrong_way_2019_sf,\n         aes(time))+\n  geom_density(col = \"dodgerblue3\",alpha = 0.5,linewidth = 2)+\n  geom_density(data = wrong_way_2020_sf, col = \"firebrick3\",alpha = 0.5,linewidth = 2)+\n    scale_x_time()+\n  # scale_y_continuous(labels = scales::label_percent(accuracy = 2))+\n  labs(x = \"Time\",\n       title = \"Daily profile of wrong-way driving reports\",\n       subtitle = \"blue = 2019 , red = 2020\",\n       caption = \"Showing all days\")+\n  theme_minimal()\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_density()`)."
  },
  {
    "objectID": "C1_infractions.html#summary-by-vehicle-type",
    "href": "C1_infractions.html#summary-by-vehicle-type",
    "title": "Infraction data",
    "section": "Summary by vehicle type",
    "text": "Summary by vehicle type\n\nwrong_way_2019_sf |&gt;\n  st_drop_geometry() |&gt; \n  mutate(veh_class = CLASE_VEHICULO |&gt;\n           str_to_lower()) |&gt; \n  count(veh_class) |&gt; \n  arrange(-n)\n\n# A tibble: 15 × 2\n   veh_class                n\n   &lt;chr&gt;                &lt;int&gt;\n 1 motocicleta           1743\n 2 automóvil              822\n 3 camioneta              277\n 4 campero                 76\n 5 bus                     29\n 6 camión                  27\n 7 micro                   17\n 8 microbus                12\n 9 buseta                   9\n10 motociclo                4\n11 tractocamión             3\n12 volqueta                 3\n13 -                        1\n14 bicicleta o triciclo     1\n15 tractocamion             1\n\n\n\nst_write(wrong_way_2019_sf,dsn = \"wwd_2019.gpkg\",delete_dsn = T)\n\nDeleting source `wwd_2019.gpkg' using driver `GPKG'\nWriting layer `wwd_2019' to data source `wwd_2019.gpkg' using driver `GPKG'\nWriting 3025 features with 16 fields and geometry type Point."
  }
]