---
editor: 
  markdown: 
    wrap: 72
---

# Planning Units

```{r}
#| label: packages
#| message: false

options(repos = c(CRAN = "https://cloud.r-project.org"))
if (!require("remotes")) install.packages("remotes")
pkgs = c(
    "sf",
    "tidyverse",
    "tmap",
    "paletteer"
)

remotes::install_cran(pkgs)
sapply(pkgs, require, character.only = TRUE)
```

We will use classification of Local Planning Units as analysis units.
For that purpose, we load the `gkpg` file which has been extracted from
the Reference map (available
[here](https://www.ideca.gov.co/recursos/mapas/mapa-de-referencia-para-bogota-dc)).

```{r}
#| label: get-LPU-boundaries

dir.create("raw_data",showWarnings = F)

if(!file.exists(file.path("raw_data", "UPL_Bogota.zip"))) {
  u <-
    "https://github.com/juanfonsecaLS1/P1_ratruns_analysis/releases/download/v0/UPL_Bogota.zip"
  download.file(u, file.path("raw_data", basename(u)), mode = "wb")
  unzip(zipfile = file.path("raw_data", basename(u)), exdir = "raw_data")
}

lpu_boundaries <- st_read("raw_data/MR_VR0924_UPL.gpkg")
```

LPU have been classified according to official sources (see this). North
and Northwest sectors have been merged. Only urban sectors are
considered.

```{r}
#| label: loading-lpu-classification

lpu_sector <- read_csv("raw_data/UPL_sectors.csv",
                       col_types = cols(
                         CODIGO_UPL = col_character(),
                         Sector = col_character()
                         ))
```

```{r}
#| label: join-lpu-class

lpu_classification <- lpu_boundaries |> 
  left_join(lpu_sector,
            by = "CODIGO_UPL")|> 
  filter(Sector != "Rural") |> 
  st_transform(3116)
```

```{r}
#| echo: false
#| message: false
#| warning: false

st_write(lpu_classification,dsn = "sf_network/lpu_with_sector.gpkg",append = F)
```


```{r}
#| label: plot-lpu-sectors

tm_lpu_sectors <- tm_shape(lpu_classification,relative = T,xlim = c(-.4,1))+
  tm_polygons(fill = "Sector",
              col = "gray95",lwd = 0.7,
              fill.scale = tm_scale_categorical(values = RColorBrewer::brewer.pal(n = 6,
                                                                                  name = "Set1")[c(1:2,6,3:5)]),
          fill_alpha = 0.5)+
tm_compass(type = "arrow", position = c("right", "bottom")) +
tm_scalebar(position = c("left", "bottom"),breaks = c(0,2,4,6))+
  tm_legend(position = tm_pos_auto_in(),frame = F)

tm_lpu_sectors
```


```{r}
#| label: save-map-sectors
#| eval: false
#| include: false

tmap_save(tm = tm_lpu_sectors,filename = "map_tm_lpu_sectors.png",units = "cm",height = 12,width = 10)
```


```{r}
#| label: aggregate-sectors

sector_boundaries <- lpu_boundaries |> 
  left_join(lpu_sector,
            by = "CODIGO_UPL") |> 
  mutate(Sector = str_remove(Sector,"(?<=North)west")) |> 
  group_by(Sector) |> 
  summarise(geom = st_union(geom)) |> 
  filter(Sector != "Rural") 
```

```{r}
#| label: saving-results
#| include: false
#| eval: true

st_write(sector_boundaries,dsn = "sf_network/sector_boundaries.gpkg",append = F)
```

Quick visualisation of the 5 planning sectors in the city

```{r}
#| label: plot-sectors

tm_shape(sector_boundaries) +
  tm_fill("Sector",
          fill.scale = tm_scale_categorical(values = "brewer.set1"),
          fill_alpha = 0.5)
```
